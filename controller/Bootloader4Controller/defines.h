/* definitions generated by preprocessor, copy into defines.h */		
#ifndef	PPINC	
#define	_ATMEGA324P	// device select: _ATMEGAxxxx
#define	_B4096	    // boot size select: _Bxxxx (words), powers of two only
#ifdef	__ICCAVR__	
#include "ioxm128A1.h"
#endif		
#if	__GNUC__	
#include	<avr/io.h>	
#endif

#include "avr_compiler.h"

#define LARGE_MEMORY

#define HAVE_LED
/* define pin for enter-self-prog-mode */		
#define	PROGCTRL	PORTC.PIN0CTRL
#define	PROGPIN		PORTC.IN
#define	PROG_NO		PIN0_bp

/* baud rate register value calculation */		
#define	CPU_FREQ	2000000
#define	BRREG_VALUE	 12

/* definitions for UART control */		
#define UART_PORT				    PORTC
#define UART_TX_PIN				    PIN3_bm
#define	BAUD_RATE_LOW_REG			USARTC0.BAUDCTRLA
#define	UART_CONTROL_REG			USARTC0.CTRLB
#define	ENABLE_TRANSMITTER_BIT		USART_TXEN_bp
#define	ENABLE_RECEIVER_BIT			USART_RXEN_bp
#define	UART_STATUS_REG				USARTC0.STATUS
#define	TRANSMIT_COMPLETE_BIT		USART_TXCIF_bp
#define	DATA_REG_EMPTY_BIT		    USART_DREIF_bp
#define	RECEIVE_COMPLETE_BIT		USART_RXCIF_bp
#define	CLK2X_BIT					USART_CLK2X_bp
#define	UART_DATA_REG				USARTC0.DATA

/* definitions for SPM control */		
#define	SPMCR_REG		    NVM.CTRLB
#define	PAGESIZE		    512
#define	APP_END		 	    0x20000

/* EEPROM definitions */
#define EEPROM_NO_PAGES     64
#define EEPROM_BYTES_IN_PAGE 32
// Masking out the byte address in a page
#define EEPROM_BYTE_ADDRESS_MASK    0x1f

/* definitions for device recognition */		
#define	PARTCODE			0xFA
#define	SIGNATURE_BYTE_1	0x1E
#define	SIGNATURE_BYTE_2	0x97
#define	SIGNATURE_BYTE_3	0x4C

/* indicate that preprocessor result is included */		
#define	PPINC
#endif	
